"use strict";
/*!
 *
 * GBZ80 to Items - script.min.js
 * Version 2.1
 * Build date : ??/??/????
 *
 * Script√© par ISSOtm
 * Tous droits r√©serv√©s √  ISSOtm (@ecpensiveLife) et PRAMA Initiative (@PramaTheTrust)
 *
 * Toute ou partie de ce scipt ne peut √™tre recopi√© qu'avec l'autorisation expresse de ISSOtm et de PRAMA Initiative.
 * De plus, ces deux noms devront √™tre mentionn√©s dans l'en-t√™te du script dans lequel elles se trouveront.
 *
 * Remerciements aux √©quipes de jQuery (http://jquery.org) et de Bootstrap (http://getbootstrap.com) pour leur fantastique travail.
 * Merci √  l'auteur des Glyphicons Halflings pour avoir mis gratuitement √  disposition de Boostrap certaines de ses cr√©ations.
 * Merci enfin √  PRAMA Initiative pour avoir h√©berg√© ce script !
 *
 */
;if("undefined"===typeof $){if("undefined"===typeof jQuery){throw new Error("jQuery est requis !!")}else{$=jQuery}}function typeOf(b){return typeof b==="number"&&isNaN(b)?"NaN":Array.isArray(b)?"array":b===null?"null":typeof b}function replaceIfType(d,c,e){e=e||typeOf(c);return(typeOf(e)==="array"?e.indexOf(typeOf(d)):e===typeOf(d))?d:c}function isNumber(b){function a(c){return typeof c==="number"&&!isNaN(c)}if(a(b)){return true}return a(parseInt(b))}function isInt(a){return isNumber(a)&&a>=0&&Math.floor(a)===a}var options=replaceIfType(options,{}),defaultOptions={debug:false,useStrict:false},i;for(i in defaultOptions){options[i]=replaceIfType(options[i],defaultOptions[i])}function log(a){if(options.debug){console.log(a)}}function info(a){if(options.debug){console.info(a)}}function warn(a){if(options.debug){console.warn(a)}}function raise(a){console.exception(a);log("Stack trace :");if(options.debug){console.trace()}throw new Error(a)}function strictOnlyRaise(a){if(options.useStrict){warn("STRICT-ONLY EXCEPTION RAISED !");raise(a)}}info("Fonctions ind√©pendantes et de debug charg√©es !");function decToHex(b,c){if(!isInt(b)){raise("input : Nombre attendu, "+b+" obtenu.")}c=c||1;if(!isInt(c)){raise("minChars : Nombre attendu, "+c+" obtenu.")}var a="";while(b!==0){a=hexCharList[b%16]+a;b=Math.floor(b/16);c--}if(a.length<=c){a=new Array(c).fill("0").join("")+a}return a}function hexToDec(b){if(typeof b!=="string"){raise("input : String expected.")}if(!/^[0-9A-F]+$/.test(b)){raise("input : heaxdecimal parsing failed.")}var a=0;while(b!==""){a=a*16+hexCharList.indexOf(b.charAt(0));b=b.slice(1)}return a}function binToDec(b){if(typeof b!=="string"){raise("input : String expected.")}var a=0;while(b!==""){a*=2;if(b.charAt(0)==="1"){a++}else{if(b.charAt(0)!=="0"){raise("input : binary parsing failed.")}}b=b.slice(1)}return a}info("Fonctions de conversion de bases charg√©es !");function Instruction(f,d){log("Une Instruction a √©t√© instanci√©e.");this.str=f;if(Array.isArray(f.match(/\[?(im|me)m<sub>(8|16)<\/sub>\]?/))){log("Argument d√©tect√©, modification de la cha√Æne.");this.str=f.replace(/\[?(im|me)m<sub>(8|16)<\/sub>\]?/,"$"+decToHex(d,RegExp.$2==="8"?2:4))}this.instrIndex=opcodeList.indexOf(f);this.isPrefix=false;this.argument=0;this.args=0;if(this.instrIndex===-1){this.instrIndex=prefixedOpcodes.indexOf(f);if(this.instrIndex===-1){raise("Instruction inexistante : "+f)}this.isPrefix=true}else{this.args=args[this.instrIndex];this.argument=d}if(this.args!==0&&!isInt(this.argument)){throw new Error("Argument invalide")}this.hex=(this.isPrefix?"CB ":"")+decToHex(this.instrIndex,2)+(this.args===0?"":" "+(this.args===1?decToHex(this.argument,2):decToHex(this.argument,4).slice(2)+" "+decToHex(this.argument,4).slice(0,2)));var e="",c={};for(e in this){c[e]={writable:false}}Object.defineProperties(this,c);if(options.debug){c={instruction:this.str,prefixee:this.isPrefix,opcode:this.hex,tailleArgument:this.args,argument:decToHex(this.argument)};console.table(c);console.warn("L'instance va √™tre valid√©e.");for(e in c){c[e]=false}if(typeOf(this.argument)!=="number"||this.argument<0){c.argument=true}else{c.argument=(function(a){switch(a.args){case 0:return a.argument!==0;case 1:return a.argument>255;case 2:return a.argument>65536;default:c.tailleArgument=true;return true}})(this)}e=false;for(var d in c){e=e||c[e]}if(e){console.error("La validation de l'instance a √©chou√©.");console.info("Elements invalides :");console.table(c);console.log("Stack Trace :");console.trace()}}log("L'instanciation s'est d√©roul√©e correctement !")}function InstructionList(){log("Une InstructionList a √©t√© instanci√©e.");this.list=[];this.push=function(a){if(a instanceof Instruction){log("Instruction ajout√©e en index "+this.list.push(a))}else{raise("Instruction attendue, "+a+" obtenu.")}updaterListe()};this.remove=function(a){if(!isInt(a)){raise("Nombre attendu, "+a+" obtenu.")}log("L'instruction #"+a+" a √©t√© retir√©e de la liste.");this.list.splice(a,1);updaterListe()};this.moveDownwards=function(a){if(!isInt(a)){raise("Nombre attendu, "+a+" obtenu.")}if(a>=this.list.length){raise("Cannot move instruction out of bounds !")}log("Items #"+a+" et #"+(a+1)+" intervertis.");this.list.splice(a,2,this.list[a+1],this.list[a]);updaterListe()};this.moveUpwards=function(a){if(a<1){raise("Cannot move instruction out of bounds !")}this.moveDownwards(a-1)};this.flush=function(){this.list.splice(0,d.length);log("Liste d'instructions vid√©e.");updaterListe()};this.forEach=function(a){if(typeof a!=="function"){raise("Fonction attendue, "+a+" obtenu.")}this.list.forEach(a)};this.opcodify=function(){var a=[];this.forEach(function(b){a+=" "+b.hex});return a.slice(1).split(" ")};Object.defineProperty(this,"length",{get:function(){return this.list.length}});var d="",c={};for(d in this){c[d]={writable:false}}Object.defineProperties(this,c);log("L'instanciation s'est d√©roul√©e correctement !")}info("Constructeurs de classe charg√©s !");function item(a,b){if(!isInt(a)){raise("ID : Nombre attendu, "+a+" re√ßu.")}if(typeof b!=="boolean"){raise("hex : Boolean attendu, "+a+" re√ßu.")}return a<196?(b&&!itemAttrList[a].valid?"hex:"+decToHex(a,2)+" ("+itemList[a]+")":itemList[a]):(a<201?"CS0"+(a-195):a===255?"RETOUR":"CT"+(a<210?"0":"")+(a-200))}function updaterListe(){log("Mise √  jour de la liste d'instructions.");$("#instrList span.glyphicon").off("click");if(instructions.length===0){log("Liste vide !");$("#instrList").html("<li>Il n'y a aucune instruction.</li>");return}$("#instrList").html("");instructions.forEach(function(b,a){$("#instrList").append('<li class="row" data-index="'+a+'"><span class="col-xs-2"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span><span class="glyphicon glyphicon-upload" aria-hidden="true"></span><span class="glyphicon glyphicon-download" aria-hidden="true"></span></span><span class="col-xs-5">'+b.str+'</span><span class="col-xs-3">'+b.hex+"</span></span></li>")});$("#instrList .glyphicon-trash").click(function(){instructions.remove(parseInt($(this).parent().parent().attr("data-index")))});$("#instrList .glyphicon-download").click(function(){instructions.moveDownwards(parseInt($(this).parent().parent().attr("data-index")))});$("#instrList .glyphicon-upload").click(function(){instructions.moveUpwards(parseInt($(this).parent().parent().attr("data-index")))});$("#instrList .glyphicon-upload:first").off("click").remove();$("#instrList .glyphicon-download:last").off("click").remove();log("Liste mise √  jour avec succ√®s !")}function ajouterInstruction(){log("Ajout d'une instruction, partie 1.");var a=$("#buttonBars .active").html(),b=opcodeList.indexOf(a);if(a===undefined){warn("Aucune instruction n'a √©t√© s√©lectionn√©e, ajout annul√©.");return false}$("#ajouter .buttonbars .btn-group").addClass("hidden");$("#ajouter").modal("hide");if(prefixedOpcodes.indexOf(a)!==-1){log("Instruction pr√©fix√©e, handler sp√©cial activ√©.");instructions.push(new Instruction(a,0))}else{$("#nbArgs").attr("data-instr",a);if(args[b]!==0){log("Demande d'arguments activ√©e.");$("#nbArgs").modal("show");$("#operation").html(a)}else{log("Aucun argument n'est requis.");_ajouterInstruction()}}}function _ajouterInstruction(){function d(g){warn('Entr√©e invalide ! ("'+g+'")');$("#nbArgs .form-group").addClass("has-feedback").addClass("has-error").append('<span class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true"></span><span class="sr-only">invalide !</span>');$(".help-block").html(g).removeClass("hidden");setTimeout(function(){$("#nbArgs .form-group").removeClass("has-error").removeClass("has-feedback");$("#nbArgs .form-group > span").remove();$(".help-block").addClass("hidden")},5000)}log("Ajout d'une instruction, partie 2.");var f=args[opcodeList.indexOf($("#nbArgs").attr("data-instr"))],a=65536,b="dec",c={dec:function(g){return parseInt(g)},bin:binToDec,hex:hexToDec};if(f!==0){log("Argument requis.");b=$("#nbArgs select").val();a=$("#nbArgs input").val();var e={dec:/^[0-9]+$/,bin:/^[01]+$/,hex:/^[0-9A-F]+$/};log("Argument : "+a+", de type "+b);if(e[b].test(a)){a=c[b](a);if(a>(f===1?255:65535)){d("L'argument entr&eacute; est trop grand !");return}}else{a={dec:"d&eacute;cimal",bin:"binaire",hex:"hexad&eacute;cimal"};d("L'argument entr&eacute; n'est pas un nombre "+a[b]+" valide !");return}}log("Instruction valid√©e, ajout en cours...");$("#nbArgs").modal("hide");instructions.push(new Instruction($("#nbArgs").attr("data-instr"),a))}function toutSupprimer(){warn("La liste va √™tre vid√©e !");instructions.flush();$("#toutSupprimer .togglable").toggleClass("hidden");$("#toutSupprimer .modal-header").removeClass("bg-danger").addClass("bg-success");$("#toutSupprimer h4").removeClass("text-danger").addClass("text-success");$("#toutSupprimer").modal("handleUpdate");setTimeout(function(){$("#toutSupprimer").modal("hide");setTimeout(function(){$("#toutSupprimer .togglable").toggleClass("hidden");$("#toutSupprimer .modal-header").removeClass("bg-success").addClass("bg-danger");$("#toutSupprimer h4").removeClass("text-success").addClass("text-danger");log("Modal de vidage ferm√©.")},200)},3000)}function itemify(e,b){log('"Itemification" d√©marr√©e.');if(typeOf(e)!=="array"){raise("opcodes : Array attendu, "+e+" obtenu.")}if(typeOf(b)!=="object"){raise("w : Object attendu, "+b+" obtenu.")}$("#items > ol").html("");var d=0,a=e.length,c={multiple:false,invalid:false,quantity:false};itemAttrList.forEach(function(f){f.used=false});log('Setup termin√©, d√©marrage de l\'"itemification".');while(d<a){c.multiple=c.multiple||itemAttrList[hexToDec(e[d])].used;itemAttrList[hexToDec(e[d])].used=true;c.invalid=c.invalid||!itemAttrList[hexToDec(e[d])].valid;$("#items > ol").append("<li>"+item(hexToDec(e[d]),true)+" x</li>");if(!itemAttrList[hexToDec(e[d])].qty&&d+1!==a&&e[d]!==1){c.quantity=true}d++;$("#items > ol > li:last").append(typeof e[d]!=="string"?"[quantit&eacute; quelconque]":hexToDec(e[d]));d++}log('"Itemification" termin√©e, mise en place des warnings...');for(d in c){c[d]=c[d]&&b[d]}log("Mise en place des warnings termin√©e.");return c}function compiler(){log("D√©marrage de la compilation.");if(instructions.length===0){warn("Aucune instruction √  compiler, la compilation a √©t√© annul√©e.");return false}function a(b,c){$("#compiler div.progress-bar").html(b+"%").css("width",b+"%").attr("aria-valuenow",b);$("#action").html(c);log("Progression de la compilation : "+c+" ("+b+"%).")}$("#items").addClass("hidden");$("#items > .alert-warning").addClass("hidden");$("#items > .alert-warning > ol > li").addClass("hidden");$("#compiler").on("shown.bs.modal",function(){a(25,"Conversion");var b=instructions.opcodify();setTimeout(function(){a(50,"Mise en forme");var c=itemify(b,{multiple:$("#_multipleWarn").hasClass("active"),invalid:$("#_invalidWarn").hasClass("active"),quantity:$("#_quantityWarn").hasClass("active")});setTimeout(function(){a(75,"Finition");for(var d in c){if(c[d]){$("#"+d+"Warn").removeClass("hidden");$("#items > .alert-warning").removeClass("hidden")}}$("#items").removeClass("hidden");setTimeout(function(){a(100,"Termin&eacute; !");setTimeout(function(){$("#compiler").modal("hide")},1000)},1000)},1000)},1000)});$("#compiler").modal("show");a(0,"Pr&eacute;paration")}function toggleHexList(){log("Animation de la hex liste...");if(animationRunning){warn("Une animation est d√©j√  en cours, ne spammez pas le bouton !");return}animationRunning=true;function a(b){log("Taille : "+b);$(".sidebar").removeClass("col-sm-"+b);$(".main, .footer > .container-fluid > div").removeClass("col-sm-"+(12-b)).removeClass("col-sm-offset-"+b);b+=isHexListHidden?1:-1;$(".sidebar").addClass("col-sm-"+b);$(".main, .footer > .container-fluid > div").addClass("col-sm-"+(12-b)).addClass("col-sm-offset-"+b);if(b!==(isHexListHidden?4:0)){setTimeout(a,100,b)}else{if(!isHexListHidden){$(".sidebar").addClass("hidden").removeClass("col-sm-0")}isHexListHidden=!isHexListHidden;animationRunning=false;log("Animation termin√©e.")}}if(isHexListHidden){$(".sidebar").removeClass("hidden").addClass("col-sm-0")}$("#navbar button").text((isHexListHidden?"Cacher":"Afficher")+" la HEX liste");a(isHexListHidden?0:4)}function instaToggleHexList(){log("InstAnimation de la sidebar...");if(animationRunning){warn("Une animation est d√©j√  en cours, ne spammez pas le bouton !");return false}$(".sidebar").toggleClass("hidden").toggleClass("col-sm-4");$(".main, .footer > .container-fluid > div").toggleClass("col-sm-8").toggleClass("col-sm-offset-4").toggleClass("col-sm-12").toggleClass("col-sm-offset-0");isHexListHidden=!isHexListHidden;$("#navbar button").text((isHexListHidden?"Afficher":"Cacher")+" la HEX liste");log("InstAnimation termin√©e.")}info("Toutes les fonctions ont √©t√© charg√©es.");var hexCharList=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"],isHexListHidden=true,animationRunning=false,itemList=["FLASH","Master Ball","Hyper Ball","Super Ball","Pok&eacute; Ball","Carte","Bicyclette",'????? ("Planche de Surf")',"Safari Ball","Pok&eacute;dex","Pierre Lune","Antidote","Anti-br&ucirc;le","D&eacute;gel","R&eacute;veil","?","Gu&eacute;rison","Potion Max","Hyper Potion","Super Potion","Potion","Badge Roche","Badge Cascade","Badge Foudre","Badge Prisme","Badge &Acirc;me","Badge Marais","Badge Volcan","Badge Terre","Corde Sortie","Repousse","Vieil Ambre","Pierre Feu","PierreFoudre","Pierre Eau","PV Plus","Prot&eacute;ine","Fer","Carbone","Calcium","Super Bonbon","Fossile D&ocirc;me","Nautile","Cl&eacute; scr&egrave;te","????? (Inutilisable)","Bon Commande","Pr&eacute;cision +","PierrePlante","Carte Magn.","P&eacute;pite","PP Plus (inutilisable)","Pok&eacute;poup&eacute;e","Total Soin","Rappel","Rappel Max","D&eacute;fense Spec.","SuperRepousse","Max Repousse","Muscle +","Jetons","Eau Fra&icirc;che","Soda Cool","Limonade","Passe Bateau","Dent d'or","Attaque +","D&eacute;fense +","Vitesse +","Sp&eacute;cial +","Bo&icirc;te Jeton","Colis Chen","Cherc'Objet","Scope Sylph","Pok&eacute;flute","Cl&eacute; Asc.","Multi Exp.","Canne","Super Canne","M&eacute;ga Canne","PP Plus (valide)","Huile","Huile Max","&Eacute;lixir","Max &eacute;lixir","2&egrave;me SS","1er SS","RDC","1er &eacute;tage","2&egrave;me &eacute;tage","3&egrave;me &eacute;tage","4&egrave;me &eacute;tage","5&egrave;me &eacute;tage","6&egrave;me &eacute;tage","7&egrave;me &eacute;tage","8&egrave;me &eacute;tage","9&egrave;me &eacute;tage","10&egrave;me &eacute;tage","4&egrave;me SS","w&uuml;m'||lm||","ws*l'||lm||","v Aft||lm||","&ucirc;c' &egrave;||lm||"," &ecirc;u'c'm'||lm||","&uuml;wj'&eacute;||lm||","||lf||lm||","&ecirc;&ocirc;A ||lm||","\\-g*||lm||","A /","&ecirc;j'&agrave;","*i l *","Lg|||-","\\-g*","?QGn?Sl","Gn?Sl","?Q;MP-",";MP-","DHNh | T4","*&ouml;****j'*","_/*-","4","*4&ocirc; &ecirc;*&uuml;?","*8\\&ucirc;","8*&ucirc;-","4&ucirc; hA *","89*****l'&ecirc;Gp*|||","BOULET* *A***** *&ocirc;p**","BOULET********","......* *||| ** ; *","*","**ASPICOT/","4/&icirc;*4\\&icirc;y&uuml;. ... ...4*","4*&icirc;*","K*** ... ...*p*|||&icirc; a","ECHANGE TERMINE !","Dommage ! L'&eacute;change","&uacute;","| eBOULET* '*||*","****pkmn***&ouml;***ASPICOT&ouml;","*SG*","*HG*","**l'&ecirc;o qB** ......*","CENTRE TROC","p' &agrave;**&ouml;/\\* |||*METAMORPH","*a&auml;/*** |||**&ouml;/","8 \\","ANIMATION COMBAT","STYLE COMBAT","RETOUR","*?B4*","\\*/*2p*","'*","**H***pkmnH*","*+H*","**I*","**I*","* D//*'*** ......*","8","APOK&eacute;DRES. * : *","** p* ***C ?","8","\\**&agrave; ** ","*","p** ***Q *I3*4* h","**","*Q n &ocirc;4* h&acirc; ov**","&ocirc;4*&icirc;8/&acirc;4*&icirc;8*&ucirc;pH*****","ABCDEFHIJKLMNOPQRST","ov*** * &auml;***&ouml;** a*","(nom du joueur)||* ?&auml;4C 8*********","*","&acirc; **2*u&auml;4C *c'vh***y'v","NOM DU RIVAL ?","NOM ?","SURNOM ?","ps*?L \\L4/&icirc;h\\**KL *","8","? *||| , ****/**D**s&auml;","ps*ASPICOTL \\L4/&icirc;h\\***L *","8","* *||| ,**","d'*a&auml;*** &ouml;|||** ......* * : *","NOM:","NOM:","**","*5*z\\**|||.CL*:","BLUE pour Rouge, RED pour Bleu","REGIS","JEAN","NOM :","RED pour Rouge, BLUE pour Bleu","SACHA","PAUL","","*","*||M\\","**M\\"],itemAttrList=[{used:false,valid:false,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:true},{used:false,valid:false,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:false,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:false},{used:false,valid:true,qty:true},{used:false,valid:false,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:false,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:false,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:false},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:true,qty:true},{used:false,valid:false,qty:true},{used:false,valid:false,qty:true},{used:false,valid:false,qty:true},{used:false,valid:false,qty:true},{used:false,valid:false,qty:false}],opcodeList=["nop","ld bc, [imm<sub>16</sub>]","ld (bc), a","inc bc","inc b","dec b","ld b, [imm<sub>8</sub>]","rlca","ld (mem<sub>16</sub>), sp","add hl, bc","ld a, (bc)","dec bc","inc c","dec c","ld c, [imm<sub>8</sub>]","rrca","&lt;corrupted stop&gt;","ld de, [imm<sub>16</sub>]","ld (de), a","inc de","inc d","dec d","ld d, [imm<sub>8</sub>]","rla","jr $+imm<sub>8</sub>","add hl, de","ld a, (de)","dec de","inc e","dec e","ld e, [imm<sub>8</sub>]","rra","jr nz, $+imm<sub>8</sub>","ld hl, [imm<sub>16</sub>]","ldi (hl), a","inc hl","inc h","dec h","ld h, [imm<sub>8</sub>]","daa","jr z, $+imm<sub>8</sub>","add hl, hl","ldi a, (hl)","dec hl","inc l","dec l","ld l, [imm<sub>8</sub>]","cpl","jr nc, $+imm<sub>8</sub>","ld sp, [imm<sub>16</sub>]","ldd (hl), a","inc sp","inc (hl)","dec (hl)","ld (hl), [imm<sub>8</sub>]","scf","jr c, $+imm<sub>8</sub>","add hl, sp","ldd a, (hl)","dec sp","inc a","dec a","ld a, [imm<sub>8</sub>]","ccf","ld b, b","ld b, c","ld b, d","ld b, e","ld b, h","ld b, l","ld b, (hl)","ld b, a","ld c, b","ld c, c","ld c, d","ld c, e","ld c, h","ld c, l","ld c, (hl)","ld c, a","ld d, b","ld d, c","ld d, d","ld d, e","ld d, h","ld d, l","ld d, (hl)","ld d, a","ld e, b","ld e, c","ld e, d","ld e, e","ld e, h","ld e, l","ld e, (hl)","ld e, a","ld h, b","ld h, c","ld h, d","ld h, e","ld h, h","ld h, l","ld h, (hl)","ld h, a","ld l, b","ld l, c","ld l, d","ld l, e","ld l, h","ld l, l","ld l, (hl)","ld l, a","ld (hl), b","ld (hl), c","ld (hl), d","ld (hl), e","ld (hl), h","ld (hl), l","halt","ld (hl), a","ld a, b","ld a, c","ld a, d","ld a, e","ld a, h","ld a, l","ld a, (hl)","ld a, a","add a, b","add a, c","add a, d","add a, e","add a, h","add a, l","add a, (hl)","add a, a","adc a, b","adc a, c","adc a, d","adc a, e","adc a, h","adc a, l","adc a, (hl)","adc a, a","sub a, b","sub a, c","sub a, d","sub a, e","sub a, h","sub a, l","sub a, (hl)","sub a, a","sbc a, b","sbc a, c","sbc a, d","sbc a, e","sbc a, h","sbc a, l","sbc a, (hl)","sbc a, a","and b","and c","and d","and e","and h","and l","and (hl)","and a","xor b","xor c","xor d","xor e","xor h","xor l","xor (hl)","xor a","or b","or c","or d","or e","or h","or l","or (hl)","or a","cp b","cp c","cp d","cp e","cp h","cp l","cp (hl)","cp a","ret nz","pop bc","jp nz, mem<sub>16</sub>","jp mem<sub>16</sub>","call nz, mem<sub>16</sub>","push bc","add a, [imm<sub>8</sub>]","rst 00h","ret z","ret","jp z, mem<sub>16</sub>","PREFIXE","call z, mem<sub>16</sub>","call mem<sub>16</sub>","adc a, [imm<sub>8</sub>]","rst 08h","ret nc","pop de","jp nc, mem<sub>16</sub>","XXX (inexistant)","call nc, mem<sub>16</sub>","push de","sub a, [imm<sub>8</sub>]","rst 10h","ret c","reti","jp c, mem<sub>16</sub>","XXX (inexistant)","call c, mem<sub>16</sub>","XXX (inexistant)","sbc a, [imm<sub>8</sub>]","rst 18h","ldh (imm<sub>8</sub>), a","pop hl","ldh (c), a","XXX (inexistant)","XXX (inexistant)","push hl","and [imm<sub>8</sub>]","rst 20h","add sp, [imm<sub>8</sub>]","jp (hl)","ld (mem<sub>16</sub>), a","XXX (inexistant)","XXX (inexistant)","XXX (inexistant)","xor [imm<sub>8</sub>]","rst 28h","ldh a, (imm<sub>8</sub>)","pop af","XXX (inexistant)","di","XXX (inexistant)","push af","or [imm<sub>8</sub>]","rst 30h","ld hl, add sp, [imm<sub>8</sub>]","ld sp, hl","ld a, (mem<sub>16</sub>)","ei","XXX (inexistant)","XXX (inexistant)","cp [imm<sub>8</sub>]","rst 38h"],prefixedOpcodes=["rlc b","rlc c","rlc d","rlc e","rlc h","rlc l","rlc (hl)","rlc a","rrc b","rrc c","rrc d","rrc e","rrc h","rrc l","rrc (hl)","rrc a","rl b","rl c","rl d","rl e","rl h","rl l","rl (hl)","rl a","rr b","rr c","rr d","rr e","rr h","rr l","rr (hl)","rr a","sla b","sla c","sla d","sla e","sla h","sla l","sla (hl)","sla a","sra b","sra c","sra d","sra e","sra h","sra l","sra (hl)","sra a","swap b","swap c","swap d","swap e","swap h","swap l","swap (hl)","swap a","srl b","srl c","srl d","srl e","srl h","srl l","srl (hl)","srl a","bit 0, b","bit 0, c","bit 0, d","bit 0, e","bit 0, h","bit 0, l","bit 0, (hl)","bit 0, a","bit 1, b","bit 1, c","bit 1, d","bit 1, e","bit 1, h","bit 1, l","bit 1, (hl)","bit 1, a","bit 2, b","bit 2, c","bit 2, d","bit 2, e","bit 2, h","bit 2, l","bit 2, (hl)","bit 2, a","bit 3, b","bit 3, c","bit 3, d","bit 3, e","bit 3, h","bit 3, l","bit 3, (hl)","bit 3, a","bit 4, b","bit 4, c","bit 4, d","bit 4, e","bit 4, h","bit 4, l","bit 4, (hl)","bit 4, a","bit 5, b","bit 5, c","bit 5, d","bit 5, e","bit 5, h","bit 5, l","bit 5, (hl)","bit 5, a","bit 6, b","bit 6, c","bit 6, d","bit 6, e","bit 6, h","bit 6, l","bit 6, (hl)","bit 6, a","bit 7, b","bit 7, c","bit 7, d","bit 7, e","bit 7, h","bit 7, l","bit 7, (hl)","bit 7, a","res 0, b","res 0, c","res 0, d","res 0, e","res 0, h","res 0, l","res 0, (hl)","res 0, a","res 1, b","res 1, c","res 1, d","res 1, e","res 1, h","res 1, l","res 1, (hl)","res 1, a","res 2, b","res 2, c","res 2, d","res 2, e","res 2, h","res 2, l","res 2, (hl)","res 2, a","res 3, b","res 3, c","res 3, d","res 3, e","res 3, h","res 3, l","res 3, (hl)","res 3, a","res 4, b","res 4, c","res 4, d","res 4, e","res 4, h","res 4, l","res 4, (hl)","res 4, a","res 5, b","res 5, c","res 5, d","res 5, e","res 5, h","res 5, l","res 5, (hl)","res 5, a","res 6, b","res 6, c","res 6, d","res 6, e","res 6, h","res 6, l","res 6, (hl)","res 6, a","res 7, b","res 7, c","res 7, d","res 7, e","res 7, h","res 7, l","res 7, (hl)","res 7, a","set 0, b","set 0, c","set 0, d","set 0, e","set 0, h","set 0, l","set 0, (hl)","set 0, a","set 1, b","set 1, c","set 1, d","set 1, e","set 1, h","set 1, l","set 1, (hl)","set 1, a","set 2, b","set 2, c","set 2, d","set 2, e","set 2, h","set 2, l","set 2, (hl)","set 2, a","set 3, b","set 3, c","set 3, d","set 3, e","set 3, h","set 3, l","set 3, (hl)","set 3, a","set 4, b","set 4, c","set 4, d","set 4, e","set 4, h","set 4, l","set 4, (hl)","set 4, a","set 5, b","set 5, c","set 5, d","set 5, e","set 5, h","set 5, l","set 5, (hl)","set 5, a","set 6, b","set 6, c","set 6, d","set 6, e","set 6, h","set 6, l","set 6, (hl)","set 6, a","set 7, b","set 7, c","set 7, d","set 7, e","set 7, h","set 7, l","set 7, (hl)","set 7, a"],args=[0,2,0,0,0,0,1,0,2,0,0,0,0,0,1,0,0,2,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,1,0,0,0,2,0,2,2,1,0,0,0,2,0,2,0,1,0,0,0,2,0,2,0,1,0,1,0,1,0,0,0,1,0,1,0,2,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,2,0,0,0,1,0],instructions=new InstructionList();info("Les tables du kernel ont √©t√© charg√©es.");$(function(){info("Le DOM est charg√©.");toggleHexList();$("#ajouter ul a").click(function(a){$("#buttonBars button").removeClass("active");$("#buttonBars > .btn-group").addClass("hidden");$("#"+$(a.target).attr("data-toolbar")).removeClass("hidden");log("buttonBar #"+$(a.target).attr("data-toolbar")+" affich√©e.")});$("#ajouter").on("hide.bs.modal",function(){log("buttonBar cach√©e.");$("#buttonBars > .btn-group").addClass("hidden")});$("#buttonBars button").click(function(){log("Bouton "+$(this).text()+" pouss√©.");if(!$(this).hasClass("active")){$("#buttonBars button").removeClass("active")}$(this).toggleClass("active")});$("#formWarn button").on("click",function(){$(this).toggleClass("btn-danger").toggleClass("btn-success").toggleClass("active")});$(".well .row .btn-group-justified > .btn-group").on("shown.bs.dropdown",function(){$("#ajouter").modal("handleUpdate")}).on("hidden.bs.dropdown",function(){$("#ajouter").modal("handleUpdate")});$("#items button").click(function(){$("#items").addClass("hidden")});$("#nbArgs form").on("submit",function(a){a.preventDefault();_ajouterInstruction()});$(".navbar-right .navbar-btn").click(toggleHexList)});info("Le script est totalement charg√© et initialis√©. Bonne utilisation !");
/*!
Si tu comprends ce code, tu auras le droit de manger un bonbon !
___    .-"""-.    ___
\  \  /\ \ \ \\  /  /
 }  \/\ \ \ \ \\/  {
 }  /\ \ \ \ \ /\  {
/__/  \ \ \ \ /  \__\
       '-...-'
*/;